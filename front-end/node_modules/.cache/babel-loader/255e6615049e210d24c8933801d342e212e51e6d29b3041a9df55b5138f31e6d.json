{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaredo\\\\Desktop\\\\NexDo\\\\front-end\\\\front-end\\\\src\\\\pages\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isRegistering ? \"https://localhost:5000/api/register\" : \"https://localhost:5000/api/login\";\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n      window.location.href = \"/\";\n    } else {\n      alert(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isRegistering ? \"Register\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: isRegistering ? \"Register\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => setIsRegistering(!isRegistering),\n        className: \"toggle-text\",\n        children: isRegistering ? \"Already have an account? Login here.\" : \"Don't have an account? Register here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"GyuXitVsEI9lGPhukgxYYHP2A14=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","AuthPage","_s","isRegistering","setIsRegistering","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","url","response","fetch","method","body","JSON","stringify","headers","data","json","token","localStorage","setItem","window","location","href","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Yaredo/Desktop/NexDo/front-end/front-end/src/pages/AuthPage.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst AuthPage = () => {\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const url = isRegistering\r\n      ? \"https://localhost:5000/api/register\"\r\n      : \"https://localhost:5000/api/login\";\r\n\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email, password }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (data.token) {\r\n      localStorage.setItem(\"token\", data.token);\r\n      window.location.href = \"/\";\r\n    } else {\r\n      alert(data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div className=\"auth-container\">\r\n        <h2>{isRegistering ? \"Register\" : \"Login\"}</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">{isRegistering ? \"Register\" : \"Login\"}</button>\r\n        </form>\r\n        <p onClick={() => setIsRegistering(!isRegistering)} className=\"toggle-text\">\r\n          {isRegistering\r\n            ? \"Already have an account? Login here.\"\r\n            : \"Don't have an account? Register here.\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}